@model HovedOppgave.Models.CreateCalibrationViewModel

@{
    ViewBag.Title = "Opprett utstyrsenhet";
}

<h2>Opprett utstyrsenhet</h2>
<br />
<div class="col-lg-offset-3">
    <div class="btn-group" role="group">
        <button type="button" class="btn btn-default" id="1" onclick="Overview()">Oversikt</button>
        <button type="button" class="btn btn-default" id="3" onclick="History()">Logg</button>
        <button type="button" class="btn btn-default" id="4" onclick="License()">Sertifikat</button>
        <button type="button" class="btn btn-default" id="4" onclick="Import()">Importering</button>
        <button type="button" class="btn btn-default" id="5" onclick="Discarded()">Kassert</button>
    </div>
</div>
<br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ListDevice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedDevice, Model.ListDevice, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListDevice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.StartDate, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogEvent.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.EndDate, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogEvent.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.DataFilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.DataFilePath, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogEvent.DataFilePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.Data1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.Data1, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogEvent.Data1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.Data2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.Data2, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogEvent.Data2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.RegisteredDate, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LogEvent.RegisteredDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListEventType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedEventType, Model.ListEventType, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListEventType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListContact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedContact, Model.ListContact, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListContact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ListRoom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedRoom, Model.ListRoom, new { size = 3, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ListRoom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opprett" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    function Import() {
        window.location.replace("/Kalibrering/Import");
    };

    function Overview() {
        window.location.replace("/Kalibrering/Overview");
    };

    function License() {
        window.location.replace("/Kalibrering/License");
    };

    function Discarded() {
        window.location.replace("/Kalibrering/Discarded");
    };

    function History() {
        window.location.replace("/Kalibrering/History");
    };
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
