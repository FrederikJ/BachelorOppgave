@model HovedOppgave.Models.CalibrationViews

<h2>Importer Sertifikat</h2>
<br />
@using (Html.BeginForm("Import", "Kalibrering", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <input type="file" class="btn btn-default" id="fileInput" name="file" />
    <input type="button" value="Vis fil" class="btn btn-default" id="how" />
    <br /><br />
    <h4>Utstyrs enhet</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.Device.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Device.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enhet", readOnly = true } })
            @Html.ValidationMessageFor(model => model.Device.Name, "", new { @class = "text-danger" })
            <a href="#showInFancy" id="floating">Søk</a>
        </div>
    </div>
    <div id="tableContainer" hidden>
        <h5>Settes til hvilken kalibrering?</h5>
        <table class="table">
            <thead id="thead"></thead>
            <tbody>
                <tr>
                    <td>
                        @Html.EditorFor(model => model.LogEvent.StartDate, new { htmlAttributes = new { @class = "form-control", readOnly = true } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.LogEvent.EndDate, new { htmlAttributes = new { @class = "form-control", readOnly = true } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Company.Name, new { htmlAttributes = new { @class = "form-control", readOnly = true } })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.Room.Name, new { htmlAttributes = new { @class = "form-control", readOnly = true } })
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <div>
        @Html.HiddenFor(model => model.LogEvent.LogEventID, new { htmlAttributes = new { disabled = "disabled" } })
    </div>
    <br /><br />
    <input type="submit" value="Lagre" hidden="hidden" id="save" class="btn btn-default" />

    <div id="showInFancy" style="display:none">
        <h5>Søk i eksisterende enheter</h5>
        <input type="text" class="form-control" id="searchBox" />
        <table class="table">
            <thead id="theadFancy"><tr><th>@Html.DisplayName("Name")</th><th>@Html.DisplayName("Velg enhet")</th></tr></thead>
            <tbody id="tbody"></tbody>
        </table>
        <button type="submit" id="putIn" class="btn btn-default">Sett inn</button>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        var deviceList = @Html.Raw(Json.Encode(Model.Devices));
        var logEventList = @Html.Raw(Json.Encode(Model.LogEvents));
        var roomList = @Html.Raw(Json.Encode(Model.Rooms));
        var companyList = @Html.Raw(Json.Encode(Model.Companys));

        $("#how").click(function() {
            var files = document.getElementById("fileInput");
            for (i = files.files.length - 1; i < files.files.length; i++) {
                var file = files.files[i];
                if(file != null)
                {
                    jQuery.fancybox.open([{
                        height: '70%',
                        width: '70%',
                        type: 'iframe',
                        href: URL.createObjectURL(file)
                    }]);
                }
            }
        });

        $("#floating").fancybox();

        $("#searchBox").keyup(function() {
            var searchVal = $("#searchBox").val().toLowerCase();
            Calibration.FancyboxSearch("device", searchVal, null, null, null, deviceList, null, null);
        });

        $("#putIn").click(function() {
            FillTableHead(null, "mini");

            var checkBoxGroupeVal = $("input:checkbox[name='Checked']:checked").val();
            var roomId, companyId;

            jQuery.each(deviceList, function(i, item) {
                if(String(item["DeviceID"]).match(checkBoxGroupeVal)) {
                    $("#Device_Name").val(item["Name"]);
                }
            });
            jQuery.each(logEventList, function(i, item) {
                if(String(item["DeviceID"]).match(String(checkBoxGroupeVal))) {
                    $("#LogEvent_LogEventID").val(item["LogEventID"]);

                    var date = new Date($.parseJSON(String(item["StartDate"]).substr(6, 13)));
                    var month = date.getMonth() + 1;
                    $("#LogEvent_StartDate").val(date.getDate() + "." + month + "." + date.getFullYear());

                    date = new Date($.parseJSON(String(item["EndDate"]).substr(6, 13)));
                    month = date.getMonth() + 1;
                    $("#LogEvent_EndDate").val(date.getDate() + "." + month + "." + date.getFullYear());

                    roomId = String(item["RoomID"]);
                    companyId = String(item["CompanyID"]);
                }
            });
            jQuery.each(roomList, function(i, item) {
                if(String(item["RoomID"]).match(roomId)) {
                    $("#Room_Name").val(item["Name"]);
                }
            });
            jQuery.each(companyList, function(i, item) {
                if(String(item["CompanyID"]).match(companyId)) {
                    $("#Company_Name").val(item["Name"]);
                }
            });
            tableContainer.hidden = false;
            checkBoxGroupeVal = null;
            $.fancybox.close()
        });
    });

    $(window).load(function() {
        var device = @Html.Raw(Json.Encode(Model.Device));
        if(device != null)
        {
            FillTableHead(null, "mini");
            tableContainer.hidden = false;
        }
    });
</script>