@model HovedOppgave.Models.CreateCalibrationViewModel

@{
    ViewBag.Title = "Endre på kalibrering";
}

<h2>Endre på kalibrering</h2>

<br />
<div class="col-lg-offset-2">
    <div class="btn-group" role="group">
        <button type="button" class="btn btn-default" id="1" onclick="Overview()">Oversikt</button>
        <button type="button" class="btn btn-default" id="2" onclick="Create()">Registrer ny enhet</button>
        <button type="button" class="btn btn-default" id="3" onclick="History()">Logg</button>
        <button type="button" class="btn btn-default" id="4" onclick="License()">Sertifikat</button>
        <button type="button" class="btn btn-default" id="5" onclick="Import()">Importering</button>
    </div>
</div>
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Device, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedDevice, Model.Device, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Device, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.RegisteredDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.RegisteredDate, new { htmlAttributes = new { @class = "form-control", placeholder = " eks: åååå.mm.dd", required = true } })
                @Html.ValidationMessageFor(model => model.LogEvent.RegisteredDate, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.StartDate, new { htmlAttributes = new { @class = "form-control", placeholder = " eks: åååå.mm.dd", required = true } })
                @Html.ValidationMessageFor(model => model.LogEvent.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.EndDate, new { htmlAttributes = new { @class = "form-control", placeholder = " eks: åååå.mm.dd", required = true } })
                @Html.ValidationMessageFor(model => model.LogEvent.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.DataFilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.DataFilePath, new { htmlAttributes = new { @class = "form-control", placeholder = " eks: C:/Dokumenter" } })
                @Html.ValidationMessageFor(model => model.LogEvent.DataFilePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.Data1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.Data1, new { htmlAttributes = new { @class = "form-control", placeholder = " eks: data" } })
                @Html.ValidationMessageFor(model => model.LogEvent.Data1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LogEvent.Data2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LogEvent.Data2, new { htmlAttributes = new { @class = "form-control", placeholder = " eks: data" } })
                @Html.ValidationMessageFor(model => model.LogEvent.Data2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedEventType, Model.EventType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedContact, Model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="room">
            @Html.LabelFor(model => model.Room, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedRoom, Model.Room, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Room, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Endre" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        var value = "@Model.LogEvent.RoomID";
        $("#SelectedRoom option[value='" + value + "']").attr("selected", "selected");
    });

    $(document).ready(function () {
        var value = "@Model.LogEvent.ContactID";
        $("#SelectedContact option[value='" + value + "']").attr("selected", "selected");
    });

    $(document).ready(function () {
        var value = "@Model.LogEvent.EventTypeID";
        $("#SelectedEventType option[value='" + value + "']").attr("selected", "selected");
    });

    $(document).ready(function () {
        var value = "@Model.LogEvent.DeviceID";
        $("#SelectedDevice option[value='" + value + "']").attr("selected", "selected");
    });

    function Overview() {
        window.location.replace("/Kalibrering/Overview");
    };

    function Create() {
        window.location.replace("/Kalibrering/Create");
    };

    function Import() {
        window.location.replace("/Kalibrering/Import");
    };

    function History() {
        window.location.replace("/Kalibrering/History");
    };

    function License() {
        window.location.replace("/Kalibrering/License");
    };
</script>